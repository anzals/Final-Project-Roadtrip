"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

# Code adopted from 
# Title: Django & React Web App Tutorial - Authentication, Databases, Deployments & More...
# Author: Tech With Tim
# Youtube link: https://www.youtube.com/watch?v=c-QsfbznSXI&t=7203s
# Lines specified below

# Code from Tech With Tim Video - Line 20 - 25
from pathlib import Path
from datetime import timedelta
from dotenv import load_dotenv
import os

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-irp^21mwddv5hetst^)$827b9xg2f!3xkzo)*z0@75%ugd@*hm'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Code from Tech With Tim Video - Line 40 - 54
ALLOWED_HOSTS = ["*"]

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
        "rest_framework.authentication.SessionAuthentication",  # Restore session auth
    ),
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.IsAuthenticated",
    ],
}

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(hours=1), 
    "REFRESH_TOKEN_LIFETIME": timedelta(days=1),
    "ROTATE_REFRESH_TOKENS": True,  # Ensures a new refresh token is issued with each refresh
    "BLACKLIST_AFTER_ROTATION": True,  # Old refresh tokens are invalidated
    "AUTH_HEADER_TYPES": ("Bearer",),
}

# Application definition
# Code from Tech With Tim Video - Line 69 - 71
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "api",
    "rest_framework",
    "corsheaders",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware", # Code from Tech With Tim Video - Line 75
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

AUTH_USER_MODEL = "api.RoadtripUser"  

WSGI_APPLICATION = 'backend.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'roadtripdatabase',  
        'USER': 'postgres',
        'PASSWORD': 'Yasiromar1',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = 'static/'

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

CORS_ALLOW_CREDENTIALS = True # Code from Tech With Tim Video - Line 146

CORS_ALLOWED_ORIGINS = [
    "http://localhost:5173",
]


# Send email using gmail SMTP
# Code adopted from 
# Title: Send Emails in Django using Gmail SMTP | A Step-by-Step Guide
# Author: CodeWithMuh
# Youtube link: https://www.youtube.com/watch?v=c-QsfbznSXI&t=7203s
# Lines specified below

# Code from CodeWithMuh Video - Line 161 - 168
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'roadtripwebapp@gmail.com'
EMAIL_HOST_PASSWORD = 'ypnc mtvk hvdb arzk'
EMAIL_USE_TLS = True 
EMAIL_USE_SSL = False 
DEFAULT_FROM_EMAIL = 'Roadtrip Planner <roadtripwebapp@gmail.com>'

APPEND_SLASH = False

# Shows errors and debug messages in the terminal while developing.
# Reference Doc: https://docs.djangoproject.com/en/stable/topics/logging/
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'DEBUG',
    },
}
